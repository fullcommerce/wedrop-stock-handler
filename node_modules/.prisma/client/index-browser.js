
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.9.1
 * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
 */
Prisma.prismaVersion = {
  client: "5.9.1",
  engine: "23fdc5965b1e05fc54e5f26ed3de66776b93de64"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AlertsScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  type: 'type'
};

exports.Prisma.BalancesScalarFieldEnum = {
  id: 'id',
  value: 'value',
  date: 'date',
  user_id: 'user_id'
};

exports.Prisma.Bling_user_productsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  integration_id: 'integration_id',
  product_id: 'product_id',
  bling_product_id: 'bling_product_id',
  bling_warehouse_id: 'bling_warehouse_id',
  status: 'status'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  category_id: 'category_id',
  name: 'name',
  url: 'url'
};

exports.Prisma.ClassesScalarFieldEnum = {
  id: 'id',
  type: 'type',
  name: 'name',
  description: 'description',
  video: 'video',
  cover: 'cover'
};

exports.Prisma.Classes_commentsScalarFieldEnum = {
  id: 'id',
  classe_id: 'classe_id',
  parent_id: 'parent_id',
  user_id: 'user_id',
  msg: 'msg',
  status: 'status'
};

exports.Prisma.Erp_queueScalarFieldEnum = {
  id: 'id',
  erp_id: 'erp_id',
  created_at: 'created_at',
  errors: 'errors',
  status: 'status'
};

exports.Prisma.ExpeditionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  doc: 'doc',
  corp: 'corp',
  board: 'board',
  insert_date: 'insert_date',
  close_date: 'close_date',
  close_user: 'close_user',
  status: 'status'
};

exports.Prisma.Fullfilment_order_productsScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  user_id: 'user_id',
  user_pack: 'user_pack',
  product_id: 'product_id',
  kit_sku: 'kit_sku',
  qtd: 'qtd',
  qtd_verified: 'qtd_verified',
  qtd_pack: 'qtd_pack',
  labels: 'labels'
};

exports.Prisma.Fullfilment_ordersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  erp_id: 'erp_id',
  integration_id: 'integration_id',
  user_verify: 'user_verify',
  user_pack: 'user_pack',
  user_delivered: 'user_delivered',
  cnpj: 'cnpj',
  seller_info: 'seller_info',
  channel: 'channel',
  phone: 'phone',
  doc: 'doc',
  doc2: 'doc2',
  doc3: 'doc3',
  volumes: 'volumes',
  total: 'total',
  discount: 'discount',
  created_at: 'created_at',
  verified_at: 'verified_at',
  can_be_picket_at: 'can_be_picket_at',
  payment_at: 'payment_at',
  packed_at: 'packed_at',
  delivered_at: 'delivered_at',
  status: 'status'
};

exports.Prisma.Hub_mercadolivre_errorsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  integration_id: 'integration_id',
  keyword: 'keyword',
  error_msg: 'error_msg',
  status: 'status',
  inserted_at: 'inserted_at',
  updated_at: 'updated_at'
};

exports.Prisma.IntegrationsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  keyword: 'keyword',
  msg: 'msg',
  erp_id: 'erp_id',
  bling_id: 'bling_id',
  params: 'params',
  params_v3: 'params_v3',
  mode: 'mode',
  type: 'type',
  labels: 'labels',
  seller_info: 'seller_info',
  status: 'status',
  user_id: 'user_id',
  shop_id: 'shop_id',
  is_cross: 'is_cross',
  api_version: 'api_version',
  crosscode: 'crosscode',
  crosscode_date: 'crosscode_date',
  update_date: 'update_date',
  insert_date: 'insert_date',
  is_v3_enabled: 'is_v3_enabled'
};

exports.Prisma.Items_mercadolivreScalarFieldEnum = {
  id: 'id',
  ml_id: 'ml_id',
  product_id: 'product_id',
  product_id_bling: 'product_id_bling',
  user_id: 'user_id',
  seller_id: 'seller_id',
  integration_id: 'integration_id',
  bling_id: 'bling_id',
  has_variations: 'has_variations',
  is_kit: 'is_kit',
  error_msg: 'error_msg',
  status: 'status',
  inserted_at: 'inserted_at',
  updated_at: 'updated_at'
};

exports.Prisma.Items_mercadolivre_variationsScalarFieldEnum = {
  id: 'id',
  parent_id: 'parent_id',
  ml_id: 'ml_id',
  product_id: 'product_id',
  bling_id: 'bling_id',
  error_msg: 'error_msg',
  status: 'status',
  inserted_at: 'inserted_at',
  updated_at: 'updated_at'
};

exports.Prisma.KitsScalarFieldEnum = {
  id: 'id',
  sku: 'sku',
  insert_date: 'insert_date',
  product_id: 'product_id',
  description: 'description',
  name: 'name',
  img: 'img',
  user_id: 'user_id',
  erp_id: 'erp_id',
  qtd: 'qtd',
  price: 'price'
};

exports.Prisma.Logistics_integrationsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  channel: 'channel',
  params: 'params',
  created_at: 'created_at',
  integration_status: 'integration_status'
};

exports.Prisma.Mercadolivre_itemsScalarFieldEnum = {
  id: 'id',
  ml_id: 'ml_id',
  title: 'title',
  img: 'img',
  permalink: 'permalink',
  list_type: 'list_type',
  price: 'price',
  status: 'status'
};

exports.Prisma.Order_costsScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  cost: 'cost',
  value: 'value'
};

exports.Prisma.Order_errorsScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  type: 'type',
  params: 'params'
};

exports.Prisma.Order_historyScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  type: 'type',
  user_id: 'user_id',
  team_id: 'team_id',
  params: 'params',
  insert_date: 'insert_date'
};

exports.Prisma.Order_labelsScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  zpl_label: 'zpl_label',
  json_label: 'json_label',
  base64_label: 'base64_label',
  type: 'type',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.Order_picturesScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  src: 'src',
  type: 'type'
};

exports.Prisma.Order_productsScalarFieldEnum = {
  id: 'id',
  qtd: 'qtd',
  qtd_pack: 'qtd_pack',
  qtd_pick: 'qtd_pick',
  order_id: 'order_id',
  product_id: 'product_id',
  user_id: 'user_id',
  suplier_id: 'suplier_id'
};

exports.Prisma.Order_returnScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  user_id: 'user_id',
  store_name: 'store_name',
  customer_name: 'customer_name',
  tracking_number: 'tracking_number',
  team_id: 'team_id',
  last_review: 'last_review',
  reason: 'reason',
  status: 'status'
};

exports.Prisma.OrdersScalarFieldEnum = {
  id: 'id',
  logistic_id: 'logistic_id',
  user_id: 'user_id',
  pack_user: 'pack_user',
  suplier_id: 'suplier_id',
  integration_id: 'integration_id',
  picking_id: 'picking_id',
  cdl: 'cdl',
  expedition_id: 'expedition_id',
  user_blingid: 'user_blingid',
  suplier_blingid: 'suplier_blingid',
  channel_order: 'channel_order',
  total: 'total',
  total_frete: 'total_frete',
  total_itens: 'total_itens',
  total_custo: 'total_custo',
  total_conci: 'total_conci',
  total_suplier: 'total_suplier',
  total_bling: 'total_bling',
  channel_id: 'channel_id',
  string_channel: 'string_channel',
  pickup_name: 'pickup_name',
  isflex: 'isflex',
  mlshipping_id: 'mlshipping_id',
  customer_name: 'customer_name',
  nfe_compra: 'nfe_compra',
  nfe_venda: 'nfe_venda',
  payment_link: 'payment_link',
  gateway_id: 'gateway_id',
  transaction_id: 'transaction_id',
  label: 'label',
  label_id: 'label_id',
  filenfe: 'filenfe',
  alllabels: 'alllabels',
  error_msg: 'error_msg',
  cancel_msg: 'cancel_msg',
  saldo_msg: 'saldo_msg',
  insert_date: 'insert_date',
  create_date: 'create_date',
  send_date: 'send_date',
  packing_date: 'packing_date',
  pay_date: 'pay_date',
  doc_date: 'doc_date',
  tracking_number: 'tracking_number',
  tracking_type: 'tracking_type',
  printed: 'printed',
  neednfe: 'neednfe',
  is_picked: 'is_picked',
  changed_by_user: 'changed_by_user',
  user_can_pay: 'user_can_pay',
  picking_status: 'picking_status',
  status: 'status'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  payment_id: 'payment_id',
  erp_id: 'erp_id',
  payment_date: 'payment_date',
  payment_method: 'payment_method',
  amount: 'amount',
  status: 'status',
  fee: 'fee'
};

exports.Prisma.PickingScalarFieldEnum = {
  id: 'id',
  init_user: 'init_user',
  end_user: 'end_user',
  picking_date: 'picking_date',
  picking_time: 'picking_time',
  channel: 'channel',
  carts: 'carts',
  init_date: 'init_date',
  end_date: 'end_date',
  status: 'status'
};

exports.Prisma.Picking_recordsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  picking_id: 'picking_id',
  order_id: 'order_id',
  product_id: 'product_id',
  product_address: 'product_address',
  picking_time: 'picking_time'
};

exports.Prisma.Picking_separatorsScalarFieldEnum = {
  id: 'id',
  picking_id: 'picking_id',
  separator_id: 'separator_id',
  carts: 'carts',
  init_time: 'init_time',
  end_time: 'end_time',
  status: 'status'
};

exports.Prisma.Product_aliasScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  alias: 'alias',
  sku: 'sku',
  qtd: 'qtd'
};

exports.Prisma.Product_queueScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  old_sku: 'old_sku',
  original_sku: 'original_sku',
  atual_sku: 'atual_sku',
  status: 'status'
};

exports.Prisma.ProductsScalarFieldEnum = {
  id: 'id',
  parent_id: 'parent_id',
  suplier_id: 'suplier_id',
  bling_id: 'bling_id',
  category_id: 'category_id',
  expect_date: 'expect_date',
  sku: 'sku',
  sku_bip: 'sku_bip',
  wedropsku: 'wedropsku',
  name: 'name',
  varname: 'varname',
  description: 'description',
  price: 'price',
  pricecost: 'pricecost',
  wedrop_price: 'wedrop_price',
  cashback: 'cashback',
  img: 'img',
  plusimgs: 'plusimgs',
  yt_video: 'yt_video',
  ean: 'ean',
  ean_bip: 'ean_bip',
  ncm: 'ncm',
  cest: 'cest',
  origem: 'origem',
  weight: 'weight',
  width: 'width',
  height: 'height',
  length: 'length',
  stock: 'stock',
  min_stock: 'min_stock',
  address: 'address',
  address1: 'address1',
  address2: 'address2',
  address3: 'address3',
  address4: 'address4',
  warehouse: 'warehouse',
  corridor: 'corridor',
  rack: 'rack',
  side: 'side',
  brand: 'brand',
  insert_date: 'insert_date',
  updated_at: 'updated_at',
  last_user_id: 'last_user_id',
  status: 'status'
};

exports.Prisma.Products_mlScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  mlb: 'mlb',
  blingData: 'blingData',
  mlData: 'mlData',
  is_variation: 'is_variation',
  health: 'health',
  is_replaced: 'is_replaced',
  is_active: 'is_active'
};

exports.Prisma.Products_ml_variationsScalarFieldEnum = {
  id: 'id',
  mlid: 'mlid',
  product_id: 'product_id',
  products_ml_id: 'products_ml_id'
};

exports.Prisma.Promo_rankingScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  totalSold: 'totalSold',
  totalCost: 'totalCost',
  totalOrders: 'totalOrders',
  position: 'position',
  updatedAt: 'updatedAt'
};

exports.Prisma.Recover_passwordScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  created_at: 'created_at',
  situation: 'situation'
};

exports.Prisma.Reorder_productsScalarFieldEnum = {
  id: 'id',
  qtd: 'qtd',
  qtd_pack: 'qtd_pack',
  order_id: 'order_id',
  product_id: 'product_id',
  user_id: 'user_id',
  suplier_id: 'suplier_id'
};

exports.Prisma.Return_historyScalarFieldEnum = {
  id: 'id',
  return_id: 'return_id',
  order_id: 'order_id',
  user_id: 'user_id',
  insert_date: 'insert_date',
  msg: 'msg',
  status: 'status'
};

exports.Prisma.SeparatorsScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name'
};

exports.Prisma.Stock_historyScalarFieldEnum = {
  id: 'id',
  inserted_at: 'inserted_at',
  sku: 'sku',
  stock: 'stock'
};

exports.Prisma.Stock_queueScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  sku: 'sku',
  stock: 'stock',
  suplier_id: 'suplier_id',
  status: 'status',
  updated_time: 'updated_time'
};

exports.Prisma.StockfixScalarFieldEnum = {
  id: 'id',
  sku: 'sku',
  stock_atom: 'stock_atom',
  stock_initial: 'stock_initial',
  stock_wedrop: 'stock_wedrop'
};

exports.Prisma.Suplier_accountScalarFieldEnum = {
  id: 'id',
  suplier_id: 'suplier_id',
  value: 'value',
  type: 'type',
  doc: 'doc',
  insert_date: 'insert_date',
  status: 'status'
};

exports.Prisma.Suplier_ordersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  user_blingid: 'user_blingid',
  suplier_blingid: 'suplier_blingid',
  total: 'total',
  total_frete: 'total_frete',
  total_itens: 'total_itens',
  channel_id: 'channel_id',
  string_channel: 'string_channel',
  customer_name: 'customer_name',
  nfe_compra: 'nfe_compra',
  nfe_venda: 'nfe_venda',
  insert_date: 'insert_date',
  create_date: 'create_date',
  status: 'status'
};

exports.Prisma.SupliersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  params: 'params',
  can_change_infos: 'can_change_infos',
  tax: 'tax',
  status: 'status'
};

exports.Prisma.TestScalarFieldEnum = {
  id: 'id',
  keyword: 'keyword',
  params: 'params',
  insert_date: 'insert_date'
};

exports.Prisma.Transaction_ordersScalarFieldEnum = {
  transaction_id: 'transaction_id',
  order_id: 'order_id',
  id: 'id'
};

exports.Prisma.TransactionsScalarFieldEnum = {
  id: 'id',
  inserted_date: 'inserted_date',
  value: 'value',
  balance: 'balance',
  description: 'description',
  type: 'type',
  rate_value: 'rate_value',
  rate_percent: 'rate_percent',
  user_id: 'user_id',
  type_payments_id: 'type_payments_id',
  rate: 'rate',
  total: 'total'
};

exports.Prisma.Type_paymentsScalarFieldEnum = {
  id: 'id',
  description: 'description',
  type: 'type',
  rate_value: 'rate_value',
  rate_percent: 'rate_percent'
};

exports.Prisma.User_accountScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  order_id: 'order_id',
  order_dest: 'order_dest',
  product_id: 'product_id',
  value_date: 'value_date',
  qtd: 'qtd',
  qtd_utilizada: 'qtd_utilizada',
  type: 'type',
  status: 'status'
};

exports.Prisma.User_account2ScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  order_id: 'order_id',
  order_dest: 'order_dest',
  product_id: 'product_id',
  value_date: 'value_date',
  qtd: 'qtd',
  qtd_utilizada: 'qtd_utilizada',
  type: 'type',
  status: 'status'
};

exports.Prisma.User_configScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  mode: 'mode',
  params: 'params',
  dados: 'dados'
};

exports.Prisma.User_errorsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  erp_id: 'erp_id',
  created_at: 'created_at',
  msg: 'msg',
  error_msg: 'error_msg',
  status: 'status'
};

exports.Prisma.User_mercadolivre_variationsScalarFieldEnum = {
  id: 'id',
  user_product_mercadolivre_id: 'user_product_mercadolivre_id',
  product_id: 'product_id',
  ml_variation_id: 'ml_variation_id',
  attributes: 'attributes'
};

exports.Prisma.User_productScalarFieldEnum = {
  id: 'id',
  integration_id: 'integration_id',
  product_id: 'product_id',
  user_id: 'user_id',
  insert_date: 'insert_date'
};

exports.Prisma.User_product_mercadolivreScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  integration_id: 'integration_id',
  product_id: 'product_id',
  ml_id: 'ml_id',
  mlb: 'mlb',
  erp_sku: 'erp_sku'
};

exports.Prisma.User_stock_resultScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  integration_id: 'integration_id',
  created_at: 'created_at',
  result: 'result',
  params: 'params',
  situation: 'situation'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  suplier_id: 'suplier_id',
  role_id: 'role_id',
  name: 'name',
  email: 'email',
  password: 'password',
  type: 'type',
  img: 'img',
  first: 'first',
  isbeta: 'isbeta',
  terms: 'terms',
  insert_date: 'insert_date',
  status: 'status'
};

exports.Prisma.Varation_kitsScalarFieldEnum = {
  id: 'id',
  variation_id: 'variation_id',
  kit_sku: 'kit_sku',
  sku: 'sku',
  name: 'name',
  price: 'price'
};

exports.Prisma.Variation_productsScalarFieldEnum = {
  id: 'id',
  variation_id: 'variation_id',
  product_id: 'product_id',
  sku: 'sku',
  name: 'name',
  price: 'price'
};

exports.Prisma.VariationsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  sku: 'sku',
  inserted_at: 'inserted_at'
};

exports.Prisma.Wallet_paymentsScalarFieldEnum = {
  id: 'id',
  gateway_payment_id: 'gateway_payment_id',
  transaction_id: 'transaction_id',
  user_id: 'user_id',
  value: 'value',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  alerts: 'alerts',
  balances: 'balances',
  bling_user_products: 'bling_user_products',
  categories: 'categories',
  classes: 'classes',
  classes_comments: 'classes_comments',
  erp_queue: 'erp_queue',
  expedition: 'expedition',
  fullfilment_order_products: 'fullfilment_order_products',
  fullfilment_orders: 'fullfilment_orders',
  hub_mercadolivre_errors: 'hub_mercadolivre_errors',
  integrations: 'integrations',
  items_mercadolivre: 'items_mercadolivre',
  items_mercadolivre_variations: 'items_mercadolivre_variations',
  kits: 'kits',
  logistics_integrations: 'logistics_integrations',
  mercadolivre_items: 'mercadolivre_items',
  order_costs: 'order_costs',
  order_errors: 'order_errors',
  order_history: 'order_history',
  order_labels: 'order_labels',
  order_pictures: 'order_pictures',
  order_products: 'order_products',
  order_return: 'order_return',
  orders: 'orders',
  payments: 'payments',
  picking: 'picking',
  picking_records: 'picking_records',
  picking_separators: 'picking_separators',
  product_alias: 'product_alias',
  product_queue: 'product_queue',
  products: 'products',
  products_ml: 'products_ml',
  products_ml_variations: 'products_ml_variations',
  promo_ranking: 'promo_ranking',
  recover_password: 'recover_password',
  reorder_products: 'reorder_products',
  return_history: 'return_history',
  separators: 'separators',
  stock_history: 'stock_history',
  stock_queue: 'stock_queue',
  stockfix: 'stockfix',
  suplier_account: 'suplier_account',
  suplier_orders: 'suplier_orders',
  supliers: 'supliers',
  test: 'test',
  transaction_orders: 'transaction_orders',
  transactions: 'transactions',
  type_payments: 'type_payments',
  user_account: 'user_account',
  user_account2: 'user_account2',
  user_config: 'user_config',
  user_errors: 'user_errors',
  user_mercadolivre_variations: 'user_mercadolivre_variations',
  user_product: 'user_product',
  user_product_mercadolivre: 'user_product_mercadolivre',
  user_stock_result: 'user_stock_result',
  users: 'users',
  varation_kits: 'varation_kits',
  variation_products: 'variation_products',
  variations: 'variations',
  wallet_payments: 'wallet_payments'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
