import { IApiInstance } from '../core/interfaces/method';
export interface IGroupProductFilters {
    nome?: string;
    nomePai?: string;
}
export declare type IGroupProductInfos = Record<string, never>;
export interface IGroupProductResponse {
    id: string;
    nome: string;
    idPai?: string;
    nomePai?: string;
}
export default function GroupProducts(api: IApiInstance, raw: boolean): {
    api: import("axios").AxiosInstance;
    raw: boolean;
    singularName: string;
    pluralName: string;
} & {
    all: {
        (options?: {
            params?: {
                filters?: IGroupProductFilters | undefined;
                infos?: IGroupProductInfos | undefined;
            } | undefined;
            raw?: false | undefined;
            page?: number | undefined;
        } | undefined): Promise<IGroupProductResponse[]>;
        (options?: {
            params?: {
                filters?: IGroupProductFilters | undefined;
                infos?: IGroupProductInfos | undefined;
            } | undefined;
            raw: true;
            page?: number | undefined;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IGroupProductResponse>>;
    };
    find: {
        (id: string | number, options?: {
            params?: IGroupProductInfos | undefined;
            raw?: false | undefined;
        } | undefined): Promise<IGroupProductResponse | IGroupProductResponse[]>;
        (id: string | number, options?: {
            params?: IGroupProductInfos | undefined;
            raw: true;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IGroupProductResponse>>;
    };
    findBy: {
        (params: {
            filters: IGroupProductFilters;
            infos?: IGroupProductInfos | undefined;
        }, options?: {
            raw?: false | undefined;
            page?: number | undefined;
        } | undefined): Promise<IGroupProductResponse[]>;
        (params: {
            filters: IGroupProductFilters;
            infos?: IGroupProductInfos | undefined;
        }, options?: {
            raw: true;
            page?: number | undefined;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IGroupProductResponse>>;
    };
};
