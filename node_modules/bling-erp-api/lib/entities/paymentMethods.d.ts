import { IApiInstance } from '../core/interfaces/method';
declare type IPaymentMethodCodigoFiscal = '1' | '2' | '3' | '4' | '5' | '10' | '11' | '12' | '13' | '14' | '15' | '90' | '99';
declare type IPaymentMethodSituacao = '0' | '1';
declare type IPaymentMethodPadrao = '0' | '1';
declare type IPaymentMethodDestino = '1' | '2' | '3';
declare type IPaymentMethodBandeira = '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '99';
declare type IPaymentMethodTipoIntegracao = '1' | '2';
declare type IPaymentMethodAutoLiquidacao = '1' | '2';
export interface IPaymentMethod {
    descricao: string;
    codigofiscal?: IPaymentMethodCodigoFiscal;
    condicao?: string;
    destino?: IPaymentMethodDestino;
    padrao?: IPaymentMethodPadrao;
    situacao?: IPaymentMethodSituacao;
    dadoscartao?: {
        bandeira?: IPaymentMethodBandeira;
        tipointegracao?: IPaymentMethodTipoIntegracao;
        cnpjcredenciadora?: string;
        autoliquidacao?: IPaymentMethodAutoLiquidacao;
    };
    dadostaxas?: {
        valoraliquota?: string;
        valorfixo?: string;
        prazo?: string;
    };
}
export interface IPaymentMethodFilters {
    descricao?: string;
    codigoFiscal?: number;
    situacao?: IPaymentMethodSituacao;
}
export declare type IPaymentMethodInfos = Record<string, never>;
export interface IPaymentMethodCreateResponse {
    id: string;
    descricao: string;
    idDestino: number;
    tband: number;
    tpIntegra: number;
    cnpjCredenciadora?: string;
    autoLiquidacao: number;
}
export interface IPaymentMethodDeleteResponse {
    id: string;
    descricao: string;
    mensagem: string;
}
export interface IPaymentMethodResponse {
    id: string;
    descricao: string;
    codigoFiscal: IPaymentMethodCodigoFiscal;
    padrao: IPaymentMethodPadrao;
    situacao: IPaymentMethodSituacao;
    fixa: string;
}
export default function PaymentMethods(api: IApiInstance, raw: boolean): {
    api: import("axios").AxiosInstance;
    raw: boolean;
    singularName: string;
    pluralName: string;
} & {
    all: {
        (options?: {
            params?: {
                filters?: IPaymentMethodFilters | undefined;
                infos?: IPaymentMethodInfos | undefined;
            } | undefined;
            raw?: false | undefined;
            page?: number | undefined;
        } | undefined): Promise<IPaymentMethodResponse[]>;
        (options?: {
            params?: {
                filters?: IPaymentMethodFilters | undefined;
                infos?: IPaymentMethodInfos | undefined;
            } | undefined;
            raw: true;
            page?: number | undefined;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IPaymentMethodResponse>>;
    };
    find: {
        (id: string | number, options?: {
            params?: IPaymentMethodInfos | undefined;
            raw?: false | undefined;
        } | undefined): Promise<IPaymentMethodResponse | IPaymentMethodResponse[]>;
        (id: string | number, options?: {
            params?: IPaymentMethodInfos | undefined;
            raw: true;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IPaymentMethodResponse>>;
    };
    findBy: {
        (params: {
            filters: IPaymentMethodFilters;
            infos?: IPaymentMethodInfos | undefined;
        }, options?: {
            raw?: false | undefined;
            page?: number | undefined;
        } | undefined): Promise<IPaymentMethodResponse[]>;
        (params: {
            filters: IPaymentMethodFilters;
            infos?: IPaymentMethodInfos | undefined;
        }, options?: {
            raw: true;
            page?: number | undefined;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IPaymentMethodResponse>>;
    };
    create: {
        (data: IPaymentMethod, options?: {
            raw?: false | undefined;
        } | undefined, ...restData: unknown[]): Promise<IPaymentMethodCreateResponse[]>;
        (data: IPaymentMethod, options?: {
            raw: true;
        } | undefined, ...restData: unknown[]): Promise<import("../core/interfaces/method").IPluralResponse<IPaymentMethodCreateResponse>>;
    };
    update: {
        (id: string | number, data: IPaymentMethod, options?: {
            raw?: false | undefined;
        } | undefined): Promise<IPaymentMethodCreateResponse>;
        (id: string | number, data: IPaymentMethod, options?: {
            raw: true;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IPaymentMethodCreateResponse>>;
    };
    delete: {
        (id: string | number, options?: {
            raw?: false | undefined;
        } | undefined): Promise<IPaymentMethodDeleteResponse>;
        (id: string | number, options?: {
            raw: true;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IPaymentMethodDeleteResponse>>;
    };
};
export {};
