"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const find_1 = __importDefault(require("../core/functions/find"));
function CustomizedField(api, raw) {
    return __awaiter(this, void 0, void 0, function* () {
        const config = {
            api,
            raw,
            singularName: 'campocustomizado',
            pluralName: 'camposcustomizados'
        };
        const find = (id, options) => __awaiter(this, void 0, void 0, function* () {
            const findMethod = new find_1.default(config);
            const raw = options && options.raw !== undefined ? options.raw : config.raw;
            if (raw) {
                return yield findMethod.find(id, { raw: true });
            }
            else {
                return yield findMethod.find(id, { raw: false });
            }
        });
        return Object.assign(config, { find });
    });
}
exports.default = CustomizedField;
