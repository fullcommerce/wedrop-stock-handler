import { IApiInstance } from '../core/interfaces/method';
export interface IDeposit {
    descricao?: string;
    desconsiderarSaldo?: boolean;
    depositoPadrao?: boolean;
    situacao?: 'A' | 'I';
}
export interface IDepositFilters {
    situacao?: 'A' | 'I';
}
export declare type IDepositInfos = Record<string, never>;
export interface IDepositResponse {
    id: string;
    descricao: string;
    situacao: string;
    depositaoPadrao: string;
    desconsiderarSaldo: 'true' | 'false';
}
export default function Deposits(api: IApiInstance, raw: boolean): {
    api: import("axios").AxiosInstance;
    raw: boolean;
    singularName: string;
    pluralName: string;
} & {
    all: {
        (options?: {
            params?: {
                filters?: IDepositFilters | undefined;
                infos?: IDepositInfos | undefined;
            } | undefined;
            raw?: false | undefined;
            page?: number | undefined;
        } | undefined): Promise<IDepositResponse[]>;
        (options?: {
            params?: {
                filters?: IDepositFilters | undefined;
                infos?: IDepositInfos | undefined;
            } | undefined;
            raw: true;
            page?: number | undefined;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IDepositResponse>>;
    };
    find: {
        (id: string | number, options?: {
            params?: IDepositInfos | undefined;
            raw?: false | undefined;
        } | undefined): Promise<IDepositResponse | IDepositResponse[]>;
        (id: string | number, options?: {
            params?: IDepositInfos | undefined;
            raw: true;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IDepositResponse>>;
    };
    findBy: {
        (params: {
            filters: IDepositFilters;
            infos?: IDepositInfos | undefined;
        }, options?: {
            raw?: false | undefined;
            page?: number | undefined;
        } | undefined): Promise<IDepositResponse[]>;
        (params: {
            filters: IDepositFilters;
            infos?: IDepositInfos | undefined;
        }, options?: {
            raw: true;
            page?: number | undefined;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IDepositResponse>>;
    };
    create: {
        (data: IDeposit, options?: {
            raw?: false | undefined;
        } | undefined, ...restData: unknown[]): Promise<IDepositResponse[]>;
        (data: IDeposit, options?: {
            raw: true;
        } | undefined, ...restData: unknown[]): Promise<import("../core/interfaces/method").IPluralResponse<IDepositResponse>>;
    };
    update: {
        (id: string | number, data: IDeposit, options?: {
            raw?: false | undefined;
        } | undefined): Promise<IDepositResponse>;
        (id: string | number, data: IDeposit, options?: {
            raw: true;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IDepositResponse>>;
    };
};
