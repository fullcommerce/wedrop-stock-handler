import { IApiInstance } from '../core/interfaces/method';
export interface IPurchaseOrder {
    numeropedido?: string;
    datacompra?: string;
    dataprevista?: string;
    ordemcompra?: string;
    desconto?: string;
    observacoes?: string;
    observacaointerna?: string;
    idcategoria?: number;
    fornecedor: {
        id?: number;
        nome?: string;
        tipopessoa?: 'F' | 'J' | 'E';
        cpfcnpj?: string;
        ie?: string;
        rg?: string;
        contribuinte?: '1' | '2' | '9';
        endereco?: string;
        endereconro?: string;
        complemento?: string;
        bairro?: string;
        cep?: string;
        cidade?: string;
        uf?: string;
        fone?: string;
        celular?: string;
        email?: string;
    };
    transporte?: {
        transportador?: string;
        freteporconta?: 'R' | 'D' | 'T' | '3' | '4' | 'S';
        qtdvolumes?: number;
        frete?: number;
    };
    itens: {
        item: {
            codigo?: string;
            descricao: string;
            un?: 'pc' | 'un' | 'cx';
            qtde: number;
            valor: number;
        };
    }[];
    parcelas?: {
        parcela?: {
            nrodias: number;
            valor: number;
            obs?: string;
            idformapagamento: number;
        };
    }[];
}
export interface IPurchaseOrderUpdateContent {
    situacao: '0' | '1' | '2' | '3';
}
export interface IPurchaseOrderFilters {
    dataEmissao?: string;
    situacao?: '0' | '1' | '2' | '3';
}
export declare type IPurchaseOrderInfos = Record<string, never>;
export interface IPurchaseOrderResponse {
    numeropedido: string;
    datacompra: string;
    dataprevista?: string;
    ordemcompra?: string;
    desconto?: string;
    observacoes?: string;
    observacaointerna?: string;
    fornecedor: {
        id: string;
        nome: string;
        tipopessoa: 'F' | 'J' | 'E';
        cpfcnpj?: string;
        ie?: string;
        rg?: string;
        contribuinte: '1' | '2' | '9';
        endereco?: string;
        endereconro?: string;
        complemento?: string;
        bairro?: string;
        cep?: string;
        cidade?: string;
        uf?: string;
        fone?: string;
        celular?: string;
        email?: string;
    };
    itens: {
        item: {
            codigo?: string;
            codigofornecedor?: string;
            descricao: string;
            un?: string;
            qtde: number;
            valor: number;
        };
    }[];
    transporte: {
        transportador?: string;
        freteporconta: 'R' | 'D' | 'T' | '3' | '4' | 'S';
        qtdvolumes: string;
        frete: number;
    };
    categoria: {
        id: number;
        descricao: string;
    };
}
export interface IPurchaseOrderCreateResponse {
    id: number;
    numeropedido: number;
    mensagens?: {
        mensagem: string;
    }[];
}
export interface IPurchaseOrderUpdateResponse {
    numero: string;
    mensagem: string;
}
export default function PurchaseOrders(api: IApiInstance, raw: boolean): {
    api: import("axios").AxiosInstance;
    raw: boolean;
    singularName: string;
    pluralName: string;
} & {
    all: {
        (options?: {
            params?: {
                filters?: IPurchaseOrderFilters | undefined;
                infos?: IPurchaseOrderInfos | undefined;
            } | undefined;
            raw?: false | undefined;
            page?: number | undefined;
        } | undefined): Promise<IPurchaseOrderResponse[]>;
        (options?: {
            params?: {
                filters?: IPurchaseOrderFilters | undefined;
                infos?: IPurchaseOrderInfos | undefined;
            } | undefined;
            raw: true;
            page?: number | undefined;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IPurchaseOrderResponse>>;
    };
    find: {
        (id: string | number, options?: {
            params?: IPurchaseOrderInfos | undefined;
            raw?: false | undefined;
        } | undefined): Promise<IPurchaseOrderResponse | IPurchaseOrderResponse[]>;
        (id: string | number, options?: {
            params?: IPurchaseOrderInfos | undefined;
            raw: true;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IPurchaseOrderResponse>>;
    };
    findBy: {
        (params: {
            filters: IPurchaseOrderFilters;
            infos?: IPurchaseOrderInfos | undefined;
        }, options?: {
            raw?: false | undefined;
            page?: number | undefined;
        } | undefined): Promise<IPurchaseOrderResponse[]>;
        (params: {
            filters: IPurchaseOrderFilters;
            infos?: IPurchaseOrderInfos | undefined;
        }, options?: {
            raw: true;
            page?: number | undefined;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IPurchaseOrderResponse>>;
    };
    create: {
        (data: IPurchaseOrder, options?: {
            raw?: false | undefined;
        } | undefined, ...restData: unknown[]): Promise<IPurchaseOrderCreateResponse[]>;
        (data: IPurchaseOrder, options?: {
            raw: true;
        } | undefined, ...restData: unknown[]): Promise<import("../core/interfaces/method").IPluralResponse<IPurchaseOrderCreateResponse>>;
    };
    update: {
        (id: string | number, data: IPurchaseOrderUpdateContent, options?: {
            raw?: false | undefined;
        } | undefined): Promise<IPurchaseOrderUpdateResponse>;
        (id: string | number, data: IPurchaseOrderUpdateContent, options?: {
            raw: true;
        } | undefined): Promise<import("../core/interfaces/method").IPluralResponse<IPurchaseOrderUpdateResponse>>;
    };
};
